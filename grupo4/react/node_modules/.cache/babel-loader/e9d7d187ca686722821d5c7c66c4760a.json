{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Enrique Niebles\\\\Documents\\\\Misi\\xF3n TIC 2021\\\\Ciclo 3 - Desarrollo Software\\\\Grupo-4\\\\grupo4\\\\react\\\\src\\\\components\\\\login\\\\auth\\\\authContext.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState, useCallback, useMemo } from \"react\";\nimport PropTypes from 'prop-types';\nimport cookie from 'react-cookies';\nimport { useHistory } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst {\n  OAuth2Client\n} = require('google-auth-library');\n\nconst CLIENT_ID = '819657394751-viq5524nlnaulgi12eh0t2jgsvd8jofo.apps.googleusercontent.com';\nconst LOGIN_ADMIN = 'LOGIN_ADMIN';\nconst LOGIN_VENDEDOR = 'LOGIN_VENDEDOR';\nexport const AuthContext = /*#__PURE__*/createContext();\nexport default function AuthContextProvider({\n  children\n}) {\n  _s();\n\n  const [isAdminAuthenticated, setIsAdminAuthenticated] = useState(window.localStorage.getItem(LOGIN_ADMIN));\n  const [isAuthenticated, setIsAuthenticated] = useState(window.localStorage.getItem(LOGIN_VENDEDOR));\n  const history = useHistory();\n  const login = useCallback(() => {\n    const client = new OAuth2Client(CLIENT_ID);\n    const token = cookie.load('token');\n\n    const verify = async token => {\n      try {\n        const ticket = await client.verifyIdToken({\n          idToken: token,\n          audience: CLIENT_ID\n        });\n        const payload = ticket.getPayload();\n        const userid = payload['sub'];\n        console.log('UserID: ', userid);\n        window.localStorage.setItem(LOGIN_VENDEDOR, true);\n        setIsAuthenticated(true);\n        setIsAdminAuthenticated(true);\n        return;\n      } catch (error) {\n        console.log('error', error);\n      }\n    };\n\n    verify(token);\n  }, []);\n  const loginAdmin = useCallback(() => {\n    const client = new OAuth2Client(CLIENT_ID);\n    const token = cookie.load('token');\n\n    const verify = async token => {\n      try {\n        const ticket = await client.verifyIdToken({\n          idToken: token,\n          audience: CLIENT_ID\n        });\n        const payload = ticket.getPayload();\n        const userid = payload['sub'];\n        console.log('UserID: ', userid);\n        setIsAdminAuthenticated(true);\n        setIsAuthenticated(false);\n        window.localStorage.setItem(LOGIN_ADMIN, true);\n        window.localStorage.removeItem(LOGIN_VENDEDOR, true);\n        return;\n      } catch (error) {\n        console.log('error', error);\n      }\n    };\n\n    verify(token);\n  }, []);\n  const logout = useCallback(() => {\n    window.localStorage.removeItem(LOGIN_ADMIN, true);\n    window.localStorage.removeItem(LOGIN_VENDEDOR, true);\n    setIsAuthenticated(false);\n    setIsAdminAuthenticated(false);\n  }, []);\n  const value = useMemo(() => ({\n    isAuthenticated,\n    isAdminAuthenticated,\n    login,\n    loginAdmin,\n    logout\n  }), [isAuthenticated, isAdminAuthenticated, login, loginAdmin, logout]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AuthContextProvider, \"XTdobb6DjkBJhZTHFhGufoLCsmI=\", false, function () {\n  return [useHistory];\n});\n\n_c = AuthContextProvider;\nAuthContextProvider.propTypes = {\n  children: PropTypes.object\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["C:/Users/Enrique Niebles/Documents/MisiÃ³n TIC 2021/Ciclo 3 - Desarrollo Software/Grupo-4/grupo4/react/src/components/login/auth/authContext.js"],"names":["createContext","useState","useCallback","useMemo","PropTypes","cookie","useHistory","OAuth2Client","require","CLIENT_ID","LOGIN_ADMIN","LOGIN_VENDEDOR","AuthContext","AuthContextProvider","children","isAdminAuthenticated","setIsAdminAuthenticated","window","localStorage","getItem","isAuthenticated","setIsAuthenticated","history","login","client","token","load","verify","ticket","verifyIdToken","idToken","audience","payload","getPayload","userid","console","log","setItem","error","loginAdmin","removeItem","logout","value","propTypes","object"],"mappings":"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","sourcesContent":["import { createContext, useState, useCallback, useMemo } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport cookie from 'react-cookies';\r\nimport { useHistory } from 'react-router';\r\nconst { OAuth2Client } = require('google-auth-library');\r\n\r\nconst CLIENT_ID = '819657394751-viq5524nlnaulgi12eh0t2jgsvd8jofo.apps.googleusercontent.com';\r\nconst LOGIN_ADMIN = 'LOGIN_ADMIN';\r\nconst LOGIN_VENDEDOR = 'LOGIN_VENDEDOR';\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport default function AuthContextProvider({children}) {    \r\n\r\n    const [isAdminAuthenticated, setIsAdminAuthenticated] = useState(window.localStorage.getItem(LOGIN_ADMIN));\r\n    const [isAuthenticated, setIsAuthenticated] = useState(window.localStorage.getItem(LOGIN_VENDEDOR));\r\n    const history = useHistory();\r\n\r\n    const login = useCallback(() => {\r\n        const client = new OAuth2Client(CLIENT_ID);\r\n        const token = cookie.load('token');\r\n\r\n        const verify = async (token) => {\r\n            try {\r\n                const ticket = await client.verifyIdToken({\r\n                    idToken: token,\r\n                    audience: CLIENT_ID\r\n                });\r\n                const payload = ticket.getPayload();\r\n                const userid = payload['sub'];\r\n                console.log('UserID: ', userid);\r\n                window.localStorage.setItem(LOGIN_VENDEDOR, true);\r\n                setIsAuthenticated(true);\r\n                setIsAdminAuthenticated(true);\r\n                return;\r\n            } catch (error) {\r\n                console.log('error', error);\r\n            } \r\n        }\r\n        \r\n        verify(token);          \r\n    }, []);\r\n\r\n    const loginAdmin = useCallback(() => {\r\n        \r\n        const client = new OAuth2Client(CLIENT_ID);\r\n        const token = cookie.load('token');\r\n\r\n        const verify = async (token) => {\r\n            try {\r\n                const ticket = await client.verifyIdToken({\r\n                    idToken: token,\r\n                    audience: CLIENT_ID\r\n                });\r\n                const payload = ticket.getPayload();\r\n                const userid = payload['sub'];\r\n                console.log('UserID: ', userid);\r\n                setIsAdminAuthenticated(true);\r\n                setIsAuthenticated(false);\r\n                window.localStorage.setItem(LOGIN_ADMIN, true);\r\n                window.localStorage.removeItem(LOGIN_VENDEDOR, true);\r\n                return;\r\n            } catch (error) {\r\n                console.log('error', error);\r\n            } \r\n        }\r\n        \r\n        verify(token);  \r\n    }, []);\r\n\r\n    const logout = useCallback(() => {\r\n        window.localStorage.removeItem(LOGIN_ADMIN, true);\r\n        window.localStorage.removeItem(LOGIN_VENDEDOR, true);\r\n        setIsAuthenticated(false);\r\n        setIsAdminAuthenticated(false);\r\n    }, []);\r\n\r\n    const value = useMemo(() => ({\r\n        isAuthenticated,\r\n        isAdminAuthenticated,\r\n        login,\r\n        loginAdmin,\r\n        logout\r\n    }), [isAuthenticated, isAdminAuthenticated, login, loginAdmin, logout]);\r\n\r\n    return (\r\n        <AuthContext.Provider value={value}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n}\r\n\r\nAuthContextProvider.propTypes = {\r\n    children: PropTypes.object\r\n};"]},"metadata":{},"sourceType":"module"}